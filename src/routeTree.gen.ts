/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsIndexImport } from './routes/settings/index'
import { Route as NotesIndexImport } from './routes/notes/index'
import { Route as LoginLoginImport } from './routes/login/login'
import { Route as GamesGamesImport } from './routes/games/games'

// Create/Update Routes

const SettingsIndexRoute = SettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any)

const NotesIndexRoute = NotesIndexImport.update({
  id: '/notes/',
  path: '/notes/',
  getParentRoute: () => rootRoute,
} as any)

const LoginLoginRoute = LoginLoginImport.update({
  id: '/login/login',
  path: '/login/login',
  getParentRoute: () => rootRoute,
} as any)

const GamesGamesRoute = GamesGamesImport.update({
  id: '/games/games',
  path: '/games/games',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/games/games': {
      id: '/games/games'
      path: '/games/games'
      fullPath: '/games/games'
      preLoaderRoute: typeof GamesGamesImport
      parentRoute: typeof rootRoute
    }
    '/login/login': {
      id: '/login/login'
      path: '/login/login'
      fullPath: '/login/login'
      preLoaderRoute: typeof LoginLoginImport
      parentRoute: typeof rootRoute
    }
    '/notes/': {
      id: '/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesIndexImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/games/games': typeof GamesGamesRoute
  '/login/login': typeof LoginLoginRoute
  '/notes': typeof NotesIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesByTo {
  '/games/games': typeof GamesGamesRoute
  '/login/login': typeof LoginLoginRoute
  '/notes': typeof NotesIndexRoute
  '/settings': typeof SettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/games/games': typeof GamesGamesRoute
  '/login/login': typeof LoginLoginRoute
  '/notes/': typeof NotesIndexRoute
  '/settings/': typeof SettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/games/games' | '/login/login' | '/notes' | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/games/games' | '/login/login' | '/notes' | '/settings'
  id: '__root__' | '/games/games' | '/login/login' | '/notes/' | '/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  GamesGamesRoute: typeof GamesGamesRoute
  LoginLoginRoute: typeof LoginLoginRoute
  NotesIndexRoute: typeof NotesIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  GamesGamesRoute: GamesGamesRoute,
  LoginLoginRoute: LoginLoginRoute,
  NotesIndexRoute: NotesIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/games/games",
        "/login/login",
        "/notes/",
        "/settings/"
      ]
    },
    "/games/games": {
      "filePath": "games/games.tsx"
    },
    "/login/login": {
      "filePath": "login/login.tsx"
    },
    "/notes/": {
      "filePath": "notes/index.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
